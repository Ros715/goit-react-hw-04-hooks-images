{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","App.js","apiService.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","name","setName","className","e","preventDefault","type","onChange","currentTarget","value","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","photo","onClick","largeImageURL","src","webformatURL","alt","Button","Modal","url","onClose","useEffect","document","addEventListener","key","App","loadInProggress","setLoadInProggress","enableLoadMore","setEnableLoadMore","enableModal","setEnableModal","photosList","setPhotosList","query","setQuery","page","setPage","perPage","largeURL","setLargeURL","loadPhotos","query1","page1","searchQuery","fetch","then","response","json","apiService","apiOutput","hits","length","concat","window","scrollTo","top","documentElement","scrollHeight","behavior","map","id","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f8aa583.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Searchbar.css\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const onSubmit1 = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state.name);\r\n    onSubmit(name);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\" onSubmit={onSubmit1}>\r\n      <form className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={(e) => {\r\n            //console.log(\"name\", e.currentTarget.value);\r\n            setName(e.currentTarget.value);\r\n          }}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGallery.css\";\r\n\r\nfunction ImageGallery({ children }) {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nfunction ImageGalleryItem({ photo, onClick }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onClick(photo.largeImageURL)}\r\n        src={photo.webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  photo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ url, onClose }) {\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      //console.log(\"code\", e.code, \"key\", e.key, \"keyCode\", e.keyCode);\r\n      if (e.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    });\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClose}>\r\n      <div className=\"Modal\">\r\n        <img src={url} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar.js\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.js\";\nimport ImageGalleryItem from \"./components/ImageGalleryItem/ImageGalleryItem.js\";\nimport Button from \"./components/Button/Button.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport apiService from \"./apiService.js\";\nimport \"./App.css\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport Loader from \"react-loader-spinner\";\n\nfunction App() {\n  const [loadInProggress, setLoadInProggress] = useState(false);\n  const [enableLoadMore, setEnableLoadMore] = useState(false);\n  const [enableModal, setEnableModal] = useState(false);\n  const [photosList, setPhotosList] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(12);\n  const [largeURL, setLargeURL] = useState(\"\");\n\n  const formatQuery = (text) => {\n    return text.trim().split(\" \").join(\"+\");\n  };\n\n  const loadPhotos = (query1, page1) => {\n    //console.log(\"query=\", query1, \"page=\", page1);\n    setLoadInProggress(true);\n    apiService(query1, page1, perPage).then((apiOutput) => {\n      setQuery(query1);\n      setPage(page1);\n      setEnableLoadMore(apiOutput.hits.length === perPage);\n      setLoadInProggress(false);\n      if (page1 === 1) {\n        setPhotosList(apiOutput.hits);\n      } else {\n        setPhotosList(photosList.concat(apiOutput.hits));\n      }\n\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    });\n  };\n\n  const onNewRequest = (query) => {\n    //setPhotosList([]);\n    loadPhotos(query, 1);\n  };\n\n  const onLoadMore = () => {\n    loadPhotos(query, page + 1);\n  };\n\n  const closeModal = () => {\n    setEnableModal(false);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={onNewRequest} />\n      <ImageGallery\n        photosList={photosList}\n        children={photosList.map((photo) => {\n          return (\n            <ImageGalleryItem\n              photo={photo}\n              key={photo.id}\n              onClick={(url) => {\n                setEnableModal(true);\n                setLargeURL(url);\n              }}\n            />\n          );\n        })}\n      />\n      {loadInProggress && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      )}\n      {enableLoadMore && <Button onClick={onLoadMore} />}\n      {enableModal && <Modal url={largeURL} onClose={closeModal} />}\n    </div>\n  );\n}\n\nexport default App;\n","export default function apiService(searchQuery, page, perPage) {\r\n  const myKey = \"22353815-5fa21056c210e4ef7062efe69\";\r\n  //console.log(\"page\", page, searchQuery);\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=${perPage}&key=${myKey}`\r\n  ).then((response) => response.json());\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}